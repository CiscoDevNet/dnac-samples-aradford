{
    "apiVersion": "1.0",
    "models": {
        "DeviceIfListResult": {
            "description": "",
            "id": "DeviceIfListResult",
            "properties": {
                "version": {
                    "type": "string"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "DeviceIfDTO"
                    }
                }
            },
            "extends": ""
        },
        "DeviceIfResult": {
            "description": "",
            "id": "DeviceIfResult",
            "properties": {
                "version": {
                    "type": "string"
                },
                "response": {
                    "$ref": "DeviceIfDTO"
                }
            },
            "extends": ""
        },
        "CountResult": {
            "description": "",
            "id": "CountResult",
            "properties": {
                "version": {
                    "type": "string"
                },
                "response": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "extends": ""
        },
        "DeviceIfDTO": {
            "description": "",
            "id": "DeviceIfDTO",
            "extends": "",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "interface description"
                },
                "interfaceType": {
                    "type": "string",
                    "description": "Interface type as Physical or Virtual"
                },
                "voiceVlan": {
                    "type": "string",
                    "description": "Vlan information of the interface"
                },
                "portType": {
                    "type": "string",
                    "description": "Port type as Ethernet Port / Ethernet SVI / Ethernet Sub Interface"
                },
                "portName": {
                    "type": "string",
                    "description": "Interface name"
                },
                "nativeVlanId": {
                    "type": "string",
                    "description": "Vlan to receive untagged frames on trunk port"
                },
                "vlanId": {
                    "type": "string",
                    "description": "Vlan ID of interface"
                },
                "series": {
                    "type": "string",
                    "description": "Series of the device"
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Time when the device interface info last got updated"
                },
                "status": {
                    "type": "string",
                    "description": "Interface status as Down / Up"
                },
                "speed": {
                    "type": "string",
                    "description": "Speed of the interface"
                },
                "instanceUuid": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "IPv4 address assigned for interface"
                },
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of interface"
                },
                "ipv4Mask": {
                    "type": "string",
                    "description": "Subnet mask for IPv4 address assigned for interface"
                },
                "isisSupport": {
                    "type": "string",
                    "description": "Flag for ISIS enabled / disabled"
                },
                "pid": {
                    "type": "string",
                    "description": "Platform ID of the device"
                },
                "mappedPhysicalInterfaceId": {
                    "type": "string",
                    "description": "ID of physical interface mapped with the virtual interface of WLC"
                },
                "className": {
                    "type": "string"
                },
                "duplex": {
                    "type": "string",
                    "description": "Interface duplex as AutoNegotiate or FullDuplex"
                },
                "portMode": {
                    "type": "string",
                    "description": "Port mode as access, trunk, routed"
                },
                "deviceId": {
                    "type": "string",
                    "description": "ID of the device"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Media Type of the interface"
                },
                "ospfSupport": {
                    "type": "string",
                    "description": "Flag for OSPF enabled / disabled"
                },
                "mappedPhysicalInterfaceName": {
                    "type": "string",
                    "description": "Physical interface name mapped with the virtual interface of WLC"
                },
                "id": {
                    "type": "string"
                },
                "adminStatus": {
                    "type": "string",
                    "description": "Administrative status of the interface"
                },
                "ifIndex": {
                    "type": "string",
                    "description": "Interface index"
                },
                "serialNo": {
                    "type": "string",
                    "description": "Serial number of the device"
                }
            },
            "required": [
                "series",
                "pid",
                "interfaceType",
                "portName",
                "duplex",
                "portMode",
                "lastUpdated",
                "status",
                "deviceId",
                "adminStatus",
                "ifIndex",
                "speed",
                "voiceVlan",
                "mediaType",
                "ospfSupport",
                "serialNo",
                "isisSupport"
            ]
        }
    },
    "resourcePath": "/interface",
    "produces": [
        "application/json"
    ],
    "apis": [
        {
            "description": "getInterface",
            "path": "/interface",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterface",
                    "type": "DeviceIfListResult",
                    "notes": "Gets all available interfaces with a maximum limit of 500",
                    "summary": "Retrieves all interfaces",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfListResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceCount",
            "path": "/interface/count",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceCount",
                    "type": "CountResult",
                    "notes": "Gets the count of interfaces for all devices",
                    "summary": "Retrieves interface count",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "CountResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceListByIp",
            "path": "/interface/ip-address/{ipAddress}",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceListByIp",
                    "type": "DeviceIfListResult",
                    "notes": "Gets list of interfaces with the given IP address",
                    "summary": "Retrieves interfaces by IP address",
                    "parameters": [
                        {
                            "description": "IP address of the interface",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "ipAddress",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfListResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceByIsis",
            "path": "/interface/isis",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceByIsis",
                    "type": "DeviceIfListResult",
                    "notes": "Gets the interfaces that has ISIS enabled",
                    "summary": "Retrieves ISIS interfaces",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfListResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceByDeviceId",
            "path": "/interface/network-device/{deviceId}",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceByDeviceId",
                    "type": "DeviceIfListResult",
                    "notes": "Gets list of interfaces for the given device",
                    "summary": "Retrieves device interfaces",
                    "parameters": [
                        {
                            "description": "Device ID",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "deviceId",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfListResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceCountByDevice",
            "path": "/interface/network-device/{deviceId}/count",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceCountByDevice",
                    "type": "CountResult",
                    "notes": "Gets the interface count for the given device",
                    "summary": "Retrieves device interface count",
                    "parameters": [
                        {
                            "description": "Device ID",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "deviceId",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "CountResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceByDeviceIdAndName",
            "path": "/interface/network-device/{deviceId}/interface-name",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceByDeviceIdAndName",
                    "type": "DeviceIfResult",
                    "notes": "Gets the interface for the given device ID and for the given interface name",
                    "summary": "Retrieves interface for the given device and interface name",
                    "parameters": [
                        {
                            "description": "Device ID",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "deviceId",
                            "paramType": "path"
                        },
                        {
                            "description": "Interface name",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "name",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceRangeByDevice",
            "path": "/interface/network-device/{deviceId}/{startIndex}/{recordsToReturn}",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceRangeByDevice",
                    "type": "DeviceIfListResult",
                    "notes": "Gets the list of interfaces for the device for the specified range",
                    "summary": "Retrieves device interfaces in the given range",
                    "parameters": [
                        {
                            "description": "Device ID",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "deviceId",
                            "paramType": "path"
                        },
                        {
                            "description": "Start index",
                            "defaultValue": "",
                            "format": "int32",
                            "required": true,
                            "type": "integer",
                            "allowMultiple": false,
                            "name": "startIndex",
                            "paramType": "path"
                        },
                        {
                            "description": "Number of records to return",
                            "defaultValue": "",
                            "format": "int32",
                            "required": true,
                            "type": "integer",
                            "allowMultiple": false,
                            "name": "recordsToReturn",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfListResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceByOspf",
            "path": "/interface/ospf",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceByOspf",
                    "type": "DeviceIfListResult",
                    "notes": "Gets the interfaces that has OSPF enabled",
                    "summary": "Retrieves OSPF interfaces",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfListResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "description": "getInterfaceById",
            "path": "/interface/{id}",
            "operations": [
                {
                    "method": "GET",
                    "deprecated": "false",
                    "produces": [
                        "application/json"
                    ],
                    "nickname": "getInterfaceById",
                    "type": "DeviceIfResult",
                    "notes": "Gets the interface for the given interface ID",
                    "summary": "Retrieves interface by ID",
                    "parameters": [
                        {
                            "description": "Interface ID",
                            "defaultValue": "",
                            "required": true,
                            "type": "string",
                            "allowMultiple": false,
                            "name": "id",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "message": "The request was successful, however no content was returned.",
                            "code": 204
                        },
                        {
                            "message": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.",
                            "code": 409
                        },
                        {
                            "message": "The GET request included a Range Header, and the server responded with the partial content matching the range.",
                            "code": 206
                        },
                        {
                            "message": "The server did not respond inside time restrictions and timed-out.",
                            "code": 504
                        },
                        {
                            "message": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).",
                            "code": 415
                        },
                        {
                            "message": "The request was successful. The result is contained in the response body.",
                            "code": 200,
                            "responseModel": "DeviceIfResult"
                        },
                        {
                            "message": "The server could not fulfill the request.",
                            "code": 500
                        },
                        {
                            "message": "The server has not implemented the functionality required to fulfill the request.",
                            "code": 501
                        },
                        {
                            "message": "The server recognizes the authentication credentials, but the client is not authorized to perform this request.",
                            "code": 403
                        },
                        {
                            "message": "The client made a request that the server could not understand (for example, the request syntax is incorrect).",
                            "code": 400
                        },
                        {
                            "message": "The server is (temporarily) unavailable.",
                            "code": 503
                        },
                        {
                            "message": "The client's authentication credentials included with the request are missing or invalid.",
                            "code": 401
                        },
                        {
                            "message": "The client made a request for a resource that does not exist.",
                            "code": 404
                        }
                    ]
                }
            ]
        }
    ],
    "swaggerVersion": "1.2",
    "basePath": "/apic-em-inventory-manager-service"
}